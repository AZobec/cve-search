#! /usr/local/bin/python3

# Imports
# make sure these modules are available on your system
import sys
import pymongo
import argparse
import re

# parse command line arguments
argparser = argparse.ArgumentParser(description='populate/update the whitelist used in webviews')
argparser.add_argument('-u', action='append', help='update whitelist')
argparser.add_argument('-i', action='append', help='import whitelist')
argparser.add_argument('-d', action='store_true', help='drop the whitelist')
argparser.add_argument('-f', action='store_true', help='force importing the whitelist by dropping the current one')
argparser.add_argument('-v', action='store_true', help='verbose output')
args = argparser.parse_args()

if __name__=='__main__':
    connect = pymongo.Connection()
    db = connect.cvedb
    collection = db.mgmt_whitelist
    if args.d:
        # drop the whitelist
        count=collection.count()
        collection.drop()
        if args.v:
            print("collection of {:d} items dropped".format(count))
    elif args.i:
        # get import file
        textfile=args.i[0]
        # check if the collection is empty
        count=collection.count()
        if count>0 and args.f is False:
            # not empty and not forced to drop
            print("whitelist already populated")
        else:
            # drop collection and repopulate it
            collection.drop()
            if args.v:
                print("collection of {:d} items dropped".format(count))
            count=0
            # read each line from the import file and regex them to a cpe format
            for line in open(textfile):
                if re.match("cpe:/", line):
                    whitelistElement={'id': line}
                    collection.insert(whitelistElement)
                    count+=1
            if args.v:
                print("{:d} products added to the whitelist".format(count))
# TODO: update function
