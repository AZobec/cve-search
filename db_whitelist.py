#!/usr/bin/env python3.3
# -*- coding: utf-8 -*-
#
# Whitelist feature to mark CVE's for CPE's of personal interest
#
# Software is free software released under the "Modified BSD license"
#

# Copyright (c) 2014      Pieter-Jan Moreels - pieterjan.moreels@gmail.com

# Imports
# make sure these modules are available on your system
import sys
import pymongo
import argparse
import re
import os

# parse command line arguments
argparser = argparse.ArgumentParser(description='populate/update the whitelist used in webviews')
argparser.add_argument('-a', action='append', help='add to whitelist')
argparser.add_argument('-r', action='append', help='remove from whitelist')
argparser.add_argument('-i', action='append', help='import whitelist')
argparser.add_argument('-e', action='append', help='export whitelist')
argparser.add_argument('-d', action='store_true', help='drop the whitelist')
argparser.add_argument('-f', action='store_true', help='force an action')
argparser.add_argument('-v', action='store_true', help='verbose output')
args = argparser.parse_args()

connect = pymongo.Connection()
db = connect.cvedb
collection = db.mgmt_whitelist

# check if db is filled
def countItems():
    return collection.count()

# check if a cpe is in the whitelist
def check(cpe):
    try:
        whitelistElement={'id': cpe}
        amount=collection.find(whitelistElement).count()
        return amount
    except Exception:
        print("Error connecting to the database")
        sys.exit()

# insert to database
def insert(cpe):
    try:
        cpe=cpe.strip()
        # check format
        if re.match("cpe:/", cpe):
            # already in db?
            if check(cpe)==0:
                if '#' in cpe:
                    # there are extra comments
                    cpeID = cpe.split('#')[0]
                    # allow multiple comments
                    comments = cpe.split('#')
                    del comments[0]
                    whitelistElement={'id': cpe, 'comments': comments}
                else:
                    whitelistElement={'id': cpe}
                collection.insert(whitelistElement)
                return True
        return False
    except Exception:
        print("Error inserting item in database")
        sys.exit()

def remove(cpe):
    try:
        cpe=cpe.strip()
        # check if the cpe is in the whitelist
        amount=check(cpe)
        if amount>0:
            whitelistElement={'id': cpe}
            collection.remove(whitelistElement)
        return amount
    except Exception:
        print("Error removing item from database")
        sys.exit()

def dropDb():
    try:
        count=countItems()
        collection.drop()
        if args.v:
            print("collection of {:d} items dropped".format(count))
    except Exception:
        print("Error dropping the database")
        sys.exit()

def importList(importFile):
    count=0
    # read each line from the import file and regex them to a cpe format
    try:
        for line in open(importFile):
            if insert(line):
                count+=1
        if args.v:
            print("{:d} products added to the whitelist".format(count))
    except IOError:
        print('Could not open the file')
        sys.exit()

def exportList(exportFile):
    try:
        if not os.path.isfile(textfile) or args.f:
            whitelisted = collection.find()
            export = open(exportFile,'w')
            count=0
            for whitelistedID in whitelisted:
                count+=1
                comments = whitelistedID['comments']
                commentString = ""
                for comment in comments:
                    commentString = commentString + '#' + comment
                export.write(whitelistedID['id']+commentString+'\n')
            export.close()
            if args.v:
                print("{:d} whitelisted items exported".format(count))
        else:
            print("file already exists")
    except Exception:
        print('Could not write to the file')
        sys.exit()

if __name__=='__main__':
    if args.d:
        # drop the whitelist
        dropDb()
    elif args.i:
        # get import file
        textfile=args.i[0]
        # check if the collection is empty
        count=countItems()
        if count>0 and args.f is False:
            # not empty and not forced to drop
            print("whitelist already populated")
        else:
            # drop collection and repopulate it
            dropDb()
            importList(textfile)
    elif args.e:
        # get export file
        textfile=args.e[0]
        
    elif args.a:
        # get list of cpe's to add
        cpeList = args.a
        # add each item from the list
        count=0
        for cpeID in cpeList:
            if insert(cpeID):
                count+=1
        if args.v:
            print("{:d} products added to the whitelist".format(count))
    elif args.r:
        # get list of cpe's to remove
        cpeList=args.r
        # remove each item from the list
        count=0
        for cpeID in cpeList:
            amount=remove(cpeID)
            count+=amount
        if args.v:
            print("{:d} products removed from the whitelist".format(count))
