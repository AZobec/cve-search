from flask import redirect, request, render_template
from flask_login import logout_user, login_required, login_user

from lib.Authentication import AuthenticationHandler
from lib.User import User
from . import auth
from ..home.utils import adminInfo, defaultFilters
from ..run import login_manager

auth_handler = AuthenticationHandler()


@login_manager.user_loader
def load_user(id):
    return User.get(id, auth_handler)


@auth.route("/login")
def login():
    # validate username and password
    username = request.form.get("username")
    password = request.form.get("password")
    person = User.get(username, auth_handler)
    try:
        if person and person.authenticate(password):
            defaultFilters.update(
                {
                    "blacklistSelect": "on",
                    "whitelistSelect": "on",
                    "unlistedSelect": "show",
                }
            )
            login_user(person)
            return render_template(
                "admin.html", status="logged_in", **adminInfo()
            )
        else:
            return render_template("login.html", status="wrong_user_pass")
    except Exception as e:
        print(e)
        return render_template("login.html", status="outdated_database")


@auth.route("/logout")
@login_required
def logout():
    logout_user()
    return redirect("/")
