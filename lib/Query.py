#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Query tools
#
# Software is free software released under the "Modified BSD license"
#
# Copyright (c) 2014-2015   Alexandre Dulaunoy - a@foo.be
# Copyright (c) 2014-2015 	Pieter-Jan Moreels - pieterjan.moreels@gmail.com

import os
import json
import requests
import sys
import urllib.parse
runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from lib.Objects import CVE
from web.api     import API

class Query():
    def __init__(self):
       self.api = API()


    def _query(self, api, url):
        r = requests.get(urllib.parse.urljoin(api, url))
        if r.status_code is 200:
            return json.loads(r.text)
        else:
            return False


    def cve(self, cveid, api=None):
        if api:
            return CVE.fromDict(self._query(api, "api/cve/%s"%str(cveid)))
        try:
            return self.api.api_cve(cveid)[0]
        except:
            return None


    def browse(self, vendor=None, api=None):
        if api:
            url = "api/browse"
            if vendor:
                url = "%s/%s"%(url, vendor)
            return self._query(api, url)
        return self.api.api_browse(vendor)


    def search(self, query, api=None):
        if api:
            return self._query(api, "api/search/%s"%str(query))
        return self.api.api_text_search(query)
