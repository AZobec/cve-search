from abc import ABC, abstractmethod


class DatabasePluginBase(ABC):
    """
    The DatabasePluginBase is the base class of all database backend plugins supported by cve search. The default
    backend plugin is mongodb. If you wish to use a different backend you could provide your own plugin. Plugins should
    be placed within the lib.DatabasePlugins folder. Plugins should be a class derived from this class and the class
    name should end with 'Plugin' for it to be automatically picked up by the DatabasePluginLoader and presented to cve
    search. The name of the plugin should be defined in the 'PluginName' variable of the configuration.ini file and
    should be the same as the name of the file (minus the '.py') in which the plugin class resides.

    ******************************************************************************************************************
            FOR Now only a small part of the API makes use of this plugin based database access all other
                            endpoints and functionalities do not use these plugins yet
    ******************************************************************************************************************
    """

    def __init__(self):
        pass

    @abstractmethod
    def query_docs(self, **kwargs):
        raise NotImplementedError

    @abstractmethod
    def fetch_one(self, **kwargs):
        raise NotImplementedError

    @abstractmethod
    def create_schema(self, **kwargs):
        raise NotImplementedError

    @abstractmethod
    def count(self, **kwargs):
        raise NotImplementedError

    @abstractmethod
    def datatables_data_columns_ordering(self, **kwargs):
        raise NotImplementedError

    @abstractmethod
    def datatables_data_filter(self, **kwargs):
        raise NotImplementedError

    @abstractmethod
    def datatables_data_order(self, **kwargs):
        raise NotImplementedError