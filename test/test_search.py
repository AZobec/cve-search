import pytest
from test.runners.cli_test_runner import CLITestRunner


@pytest.fixture
def runner():
    return CLITestRunner()


def test_search(runner):

    result = runner.runcommand("bin/search.py -p cisco:ios:12.4")

    assert result.returncode == 0


def test_search_lax(runner):

    result = runner.runcommand("bin/search.py -p cisco:ios:12.4 --lax")

    assert result.returncode == 0


def test_search_if_vuln(runner):

    result = runner.runcommand("bin/search.py -p cisco:ios:12.4 --only-if-vulnerable")

    assert result.returncode == 0


def test_search_json(runner):

    result = runner.runcommand("bin/search.py -p cisco:ios:12.4 -o json")

    assert result.returncode == 0


def test_search_html(runner):

    result = runner.runcommand("bin/search.py -p microsoft:windows_7 -o html")

    assert result.returncode == 0


def test_search_xml(runner):

    result = runner.runcommand("bin/search.py -p microsoft:windows_7 -o xml")

    assert result.returncode == 0


def test_search_cveid(runner):

    result = runner.runcommand("bin/search.py -p microsoft:windows_7 -o cveid")

    assert result.returncode == 0


def test_search_cveid_desc(runner):

    result = runner.runcommand("bin/search.py -p microsoft:windows_7 -o csv -l")

    assert result.returncode == 0


def test_search_nra(runner):
    "bin/search.py -p openstack:keystone -n -a"

    result = runner.runcommand("bin/search.py -p openstack:keystone -n -r -a")

    assert result.returncode == 0


def test_search_vendor(runner):

    result = runner.runcommand("bin/search.py -v microsoft")

    assert result.returncode == 0


def test_search_summary(runner):

    result = runner.runcommand("bin/search.py -s flaw -i 1")

    assert result.returncode == 0


def test_search_ti(runner):

    result = runner.runcommand("bin/search.py -p microsoft:windows_7 -t 30 -i 1")

    assert result.returncode == 0


def test_search_cve(runner):

    result = runner.runcommand("bin/search.py -c CVE-2010-3333")

    assert result.returncode == 0
    assert result.stdout[:19] == "CVE\t: CVE-2010-3333"
