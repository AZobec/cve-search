#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Script to check and ensure that the recommended index are created as recommended.
#
# Software is free software released under the "GNU Affero General Public License v3.0"
#
# Copyright (c) 2014       psychedelys
# Copyright (c) 2015-2018  Pieter-Jan Moreels - pieterjan.moreels@gmail.com

# Imports
import logging
import os
import sys

from pymongo import TEXT

runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

from lib.LogHandler import LogHandler
import lib.DatabaseLayer as dbLayer

logging.setLoggerClass(LogHandler)

logger = logging.getLogger("DBUpdater")


def setIndex(col, field, printSuccess=True):
    try:
        dbLayer.ensureIndex(col, field)
        if printSuccess:
            logger.info("Success to create index %s on %s" % (field, col))
    except Exception as e:
        logger.error("Failed to create index %s on %s: %s" % (col, field, e))


setIndex("cpe", "id")
setIndex("cpeother", "id")
setIndex("cves", "id")
setIndex("cves", "vulnerable_configuration")
setIndex("cves", "vulnerable_product")
setIndex("cves", "Modified")
setIndex("cves", [("summary", TEXT)])
setIndex("via4", "id")
setIndex("mgmt_whitelist", "id")
setIndex("mgmt_blacklist", "id")
setIndex("capec", "related_weakness")

via4 = dbLayer.getInfo("via4")
if via4:
    for index in via4.get("searchables", []):
        setIndex("via4", index, False)
