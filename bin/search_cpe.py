#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Software is free software released under the "Modified BSD license"
#
# Copyright (c) 2014       psychedelys
# Copyright (c) 2015-2017  Pieter-Jan Moreels - pieterjan.moreels@gmail.com
# Copyright (c) 2015       Alexandre Dulaunoy - a@foo.be

# Imports
import os
import sys
runPath = os.path.dirname(os.path.realpath(__file__))
sys.path.append(os.path.join(runPath, ".."))

import argparse
import json
import re
import urllib.parse

from lib.DatabaseLayer2 import DatabaseLayer

def search(cpe, output_format="json"):
    data = DatabaseLayer().CPE.get_regex(cpe)
    if output_format == "json":
        output = [{'id': i.id, 'title': i.title} for i in data]
        print(json.dumps(output, sort_keys=True, indent=4))
    elif output_format == "compact":
        print("\n".join([i.id for i in data]))
    elif output_format == "expanded":
        print("\n".join(["%s  %s"%(i.id, i.title) for i in data]))

if __name__ == "__main__":
    argParser = argparse.ArgumentParser(description='Search for CPE with a pattern')
    argParser.add_argument('-s', type=str, required=True, help='search in cpe list')
    argParser.add_argument('-o', type=str, default='expanded' ,help='O = output format [expanded, compact, json] (default: expanded)')
    argParser.add_argument('-f', action='store_true', help='Enlarge the CPE search to all CPE indexed. Need the cpeother activated.', default=False)

    args = argParser.parse_args()

    search(urllib.parse.quote(args.s), args.o)
